# Whether the environment is in debug mode (e.g. Django debug)
# VALUES: 0 - non debug mode; 1 - debug mode
# DEFAULT: 1
DEBUG=0

# Environment where QFieldCloud runs
# VALUES: `development` - local development; `staging` - staging server; `test` - tests; `production` - production server
# DEFAULT: test
ENVIRONMENT=production

QFIELDCLOUD_HOST="change_me"
DJANGO_SETTINGS_MODULE=qfieldcloud.settings
DJANGO_ALLOWED_HOSTS="localhost 127.0.0.1 0.0.0.0 app nginx change_me"

SECRET_KEY=change_me


######################
# Certificate settings
######################

# TLS certificate filename from within the `nginx` container.
# For usage with Let's Encrypt certificate, use as:
# QFIELDCLOUD_TLS_CERT="/etc/letsencrypt/live/${QFIELDCLOUD_HOST}/fullchain.pem"
# DEFAULT: "/etc/nginx/certs/${QFIELDCLOUD_HOST}.pem"
QFIELDCLOUD_TLS_CERT="/etc/nginx/certs/change_me.pem"

# TLS private key filename from within the `nginx` container.
# For usage with Let's Encrypt certificate, use as:
# QFIELDCLOUD_TLS_KEY="/etc/letsencrypt/live/${QFIELDCLOUD_HOST}/privkey.pem"
# DEFAULT: "/etc/nginx/certs/${QFIELDCLOUD_HOST}-key.pem"
QFIELDCLOUD_TLS_KEY="/etc/nginx/certs/change_me.key"

# TLS DF parameters filename from within the `nginx` container.
# When empty, no DF parameters are used.
# DEFAULT: "/etc/nginx/dhparams/ssl-dhparams.pem"
QFIELDCLOUD_TLS_DHPARAMS="/etc/nginx/dhparams/change_me.pem"

# LETSENCRYPT_EMAIL=""
# LETSENCRYPT_RSA_KEY_SIZE=4096
# Set to 1 if you're testing your setup to avoid hitting request limits
# LETSENCRYPT_STAGING=0


##################
# Storage settings
##################

# Used to define storages in QFieldCloud. Note the contents of this variable is a superset of Django's `STORAGES` setting.
STORAGES='{
        "default": {
            "BACKEND": "qfieldcloud.filestorage.backend.QfcS3Boto3Storage",
            "OPTIONS": {
                "access_key": "dev",
                "secret_key": "change_me",
                "bucket_name": "qfcloud-storage",
                "region_name": "",
                "endpoint_url": "http://172.17.0.1:9000"
            },
            "QFC_IS_LEGACY": false
        }
    }'

# Local admin username configuration for minio storage in local and standalone instances.
# NOTE: Ignored if `minio` is not used.
# NOTE: Needs to be the same as in the `STORAGES` setting in standalone config.
# DEFAULT: MINIO_ROOT_USER=minioadmin
MINIO_ROOT_USER="dev"

# Local admin password configuration for minio storage in local and standalone instances.
# NOTE: Ignored if `minio` is not used.
# NOTE: Needs to be the same as in the `STORAGES` setting in standalone config.
# DEFAULT: MINIO_ROOT_PASSWORD=minioadmin
MINIO_ROOT_PASSWORD="change_me"

# Public port to the minio API endpoint.
# NOTE: Ignored if `minio` is not used.
# DEFAULT: 8009
MINIO_API_PORT=8009

# Public port to the minio browser endpoint.
# NOTE: Ignored if `minio` is not used.
# DEFAULT: 8010
MINIO_BROWSER_PORT=8010

# Turn on/off the minio browser endpoint.
# NOTE: Ignored if `minio` is not used.
# DEFAULT: off
MINIO_BROWSER=off

WEB_HTTP_PORT=80
WEB_HTTPS_PORT=443

# Public port to serve an additional Docker application.
# DEFAULT: 3838
EXTRA_HTTPS_PORT=3838

# Messages are logged at the specified level and all more severe levels. The nginx default is `error`. Read more on https://nginx.org/en/docs/ngx_core_module.html#error_log.
# OPTIONS: debug, info, notice, warn, error, crit, alert, emerg
# DEFAULT: error
NGINX_ERROR_LOG_LEVEL=error


###################
# Database settings
###################

POSTGRES_USER=qfcloudb_owner
POSTGRES_PASSWORD="change_me"
POSTGRES_DB=qfcloudb
POSTGRES_HOST="change_me"
POSTGRES_PORT=5432
# "prefer" OR "require" most of the times
POSTGRES_SSLMODE=require
HOST_POSTGRES_PORT=5432

# Sentry DSN. Missing value disables Sentry logging. Can be found on https://opengisch.sentry.io/settings/projects/qfieldcloud/keys/ .
# DEFAULT: <NO VALUE>
SENTRY_DSN=

# Sentry sample rate between 0 and 1. Read more on https://docs.sentry.io/platforms/python/configuration/sampling/ .
# DEFAULT: 1
SENTRY_SAMPLE_RATE=1

# Release version shown on sentry. Read more on https://docs.sentry.io/product/releases/.
# DEFAULT: dev
SENTRY_RELEASE=dev

# Memcached port. Exposed only in docker-compose.local.yml
# DEFAULT: 11211
MEMCACHED_PORT=11211

LOG_DIRECTORY=/tmp
TMP_DIRECTORY=/tmp


#########################
# Authentication settings
#########################

# Whether password based login is enabled for QFC clients.
# VALUES: 0 - password login disabled; 1 - password login enabled
# DEFAULT: 1
QFIELDCLOUD_PASSWORD_LOGIN_IS_ENABLED=1

# Social account providers.
#
# Dictionary of OIDC / OAuth2 providers configurations that may be used for
# authentication in this QFC instance.
#
# Refer to django.allauth documentation for more information:
# https://docs.allauth.org/en/dev/socialaccount/providers/index.html
#
# NOTE: Also requires the respective provider to be added to INSTALLED_APPS
# if it's not already contained there.
#
# DEFAULT: {}
SOCIALACCOUNT_PROVIDERS='{}'

ACCOUNT_EMAIL_VERIFICATION=optional


######################
# Application settings
######################

# Docker compose default network also used by the docker in docker workers
# If empty value, a default name will be generated at build time, for example `qfieldcloud_default`.
# DEFAULT: ""
QFIELDCLOUD_DEFAULT_NETWORK="default"

# Admin URI. Requires slash in the end. Please use something that is hard to guess.
# DEFAULT: "admin/"
QFIELDCLOUD_ADMIN_URI=dev/

# QFieldCloud URL used within the worker as configuration for qfieldcloud-sdk.
# DEFAULT: "http://app:8000/api/v1/"
QFIELDCLOUD_WORKER_QFIELDCLOUD_URL="https://change_me/api/v1/"

# number of parallel workers
# DEFAULT: 1
QFIELDCLOUD_WORKER_REPLICAS=1

# QFieldCloud subscription model
# DEFAULT: subscription.Subscription
QFIELDCLOUD_SUBSCRIPTION_MODEL=subscription.Subscription

# QFieldCloud auth token expiration hours. For example 720 hours (30 days).
# DEFAULT: 720
QFIELDCLOUD_AUTH_TOKEN_EXPIRATION_HOURS=720

# Whether QFieldCloud should be translated in another language other than English.
# NOTE if there is no full translation in given language, QFieldCloud will be shown in mixture of English and the given language. Also installed Django modules have their own translations that might not be complete.
# VALUES: 0 - English only; 1 - enable other languages
# DEFAULT: 1
QFIELDCLOUD_USE_I18N=0

# QFieldCloud default language that is displayed in the interface
# DEFAULT: "en"
QFIELDCLOUD_DEFAULT_LANGUAGE="en"

# QFieldCloud default timezone that is used when account has no timezone
# DEFAULT: "Europe/Zurich"
QFIELDCLOUD_DEFAULT_TIME_ZONE="America/Guayaquil"

# QFieldCloud QGIS image name to be used as worker by the `worker_wrapper`.
# If empty value, a default name will be generated at build time, for example `qfieldcloud-qgis`.
# DEFAULT: ""
QFIELDCLOUD_QGIS_IMAGE_NAME=""

# QFieldCloud `libqfieldsync` volume path to be mounted by the `worker_wrapper` into `worker` containers.
# If empty value or invalid value, the pip installed version defined in `requirements_libqfieldsync.txt` will be used.
# DEFAULT: ""
QFIELDCLOUD_LIBQFIELDSYNC_VOLUME_PATH=""

# QFieldCloud SDK volume path to be mounted by the `worker_wrapper` into `worker` containers.
# If empty value or invalid value, the pip installed version defined in `requirements_libqfieldsync.txt` will be used.
# DEFAULT: ""
QFIELDCLOUD_QFIELDCLOUD_SDK_VOLUME_PATH=""

# The Django development port. Not used in production.
# DEFAULT: 8011
# DJANGO_DEV_PORT=8011

GUNICORN_TIMEOUT_S=300
GUNICORN_MAX_REQUESTS=300
GUNICORN_WORKERS=3
GUNICORN_THREADS=3


#################
# Docker settings
#################

# Prefix used by docker compose for each of the containers, e.g. app will be `qfieldcloud_app`
# DEFAULT: qfieldcloud
COMPOSE_PROJECT_NAME=qfcloud

# List of docker compose files
# DEFAULT: docker-compose.yml:docker-compose.override.local.yml
COMPOSE_FILE=my-docker-compose.yml:my-docker-compose.override.standalone.yml

# Separator in `COMPOSE_FILE` between filenames. Required for making COMPOSE_FILE above cross-platform (do not change)
# DEFAULT: :
COMPOSE_PATH_SEPARATOR=:

# Debugpy port used for the `app` service
# DEFAULT: 5678
DEBUG_DEBUGPY_APP_PORT=5678

# Debugpy port used for the `worker_wrapper` service
# DEFAULT: 5679
DEBUG_DEBUGPY_WORKER_WRAPPER_PORT=5679
